package router

import (
	"github.com/gin-gonic/gin"
	"github.com/swaggo/files"                  // swagger embed files
	"github.com/swaggo/gin-swagger"            // gin-swagger middleware
	"github.com/wiltonlcsj/hgBackendTest/docs" // docs is generated by Swag CLI, you have to import it.
	"github.com/wiltonlcsj/hgBackendTest/middlewares"
	"github.com/wiltonlcsj/hgBackendTest/requests"
	"os"
)

func New() {
	docs.SwaggerInfo.Title = "API Cat Breeds search"
	docs.SwaggerInfo.Description = "API created for HostGator backend test"
	docs.SwaggerInfo.Version = "1.0"
	docs.SwaggerInfo.BasePath = ""
	docs.SwaggerInfo.Schemes = []string{"http"}

	router := gin.Default()

	// Swagger
	router.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))

	// Open routes
	router.GET("/ping", requests.Ping)
	router.GET("/db-health", requests.HealthDatabase)
	router.POST("/login", requests.Login)

	v1 := router.Group("/v1", middlewares.AuthorizeJwt())
	// Must auth routes
	v1.GET("/ping", requests.AuthenticatedPing)
	v1.GET("/breeds", requests.Breed)

	err := router.Run(":" + os.Getenv("APP_PORT"))
	if err != nil {
		panic("App cannot be started")
	}
}
